//This file is a script in "some language" to do stuff with a pipeline.
pipeline {
  agent {
    kubernetes {
      yaml """
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: gradle
            image: gradle
            command:
            - sleep
            args:
            - 99d
            volumeMounts:
            - name: shared-storage
              mountPath: /mnt        
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            command:
            - sleep
            args:
            - 9999999
            volumeMounts:
            - name: shared-storage
              mountPath: /mnt
            - name: kaniko-secret
              mountPath: /kaniko/.docker
          restartPolicy: Never
          volumes:
          - name: shared-storage
            persistentVolumeClaim:
              claimName: jenkins-pvc-claim
          - name: kaniko-secret
            secret:
                secretName: dockercred
                items:
                - key: .dockerconfigjson
                  path: config.json
      """
    }
  }
  
  stages {

    stage('Checkout code and prepare environment.') {
      steps {
        git url: 'https://github.com/leopoldstotch1234/week5.git'
        sh """
          cd Chapter08/sample1
          chmod +x gradlew
	  echo "151.101.0.215 repo.maven.apache.org" | tee -a /etc/hosts
        """
      }
    }

    stage('jacocoTestCoverageVerification on main') {
      when { 
	    branch 'main' 
	    }
      steps {
        sh """
          cd Chapter08/sample1;
          ./gradlew jacocoTestReport
          ./gradlew jacocoTestCoverageVerification
        """
      }
    }

    stage('JaCoCo checkstyle test on non-Main') {
      when {
        anyOf {
          branch 'feature'
          branch 'playground'
        }
      }
      steps {
	    sh """
          cd Chapter08/sample1
          ./gradlew jacocoTestReport
          ./gradlew checkstyleMain
        """
        publishHTML (target: [
          reportDir: 'Chapter08/sample1/build/reports/checkstyle',
          reportFiles: 'main.html',
          reportName: "JaCoCo Checkstyle"
        ]) 
      }
    }
  }

  post {
    always   {
      echo 'Pipeline Complete'
      script {
        if ( env.BRANCH_NAME == 'main' ) {
          // Code coverage test report.
          // publishHTML (target: [
          //   reportDir: 'Chapter08/sample1/build/reports/tests/test',
          //   reportFiles: 'index.html',
          //   reportName: "JaCoCo CC Report"
          // ])
        }
        if (env.BRANCH_NAME == 'feature' || env.BRANCH_NAME == 'playground') {
          // Unit test and static code analysis test report.
          // publishHTML (target: [
          //   reportDir: 'Chapter08/sample1/build/reports/checkstyle',
          //   reportFiles: 'main.html',
          //   reportName: "JaCoCo Checkstyle"
          // ])
        }
      }
    }

     success  {
      script {
        env.CONTAINER_NAME = ''
        env.CONTAINER_REPO = 'meadowlark1'
        if ( env.BRANCH_NAME == 'main' )       { env.CONTAINER_NAME = 'kaniko-calculator:1.0' }
        if ( env.BRANCH_NAME == 'feature' )    { env.CONTAINER_NAME = 'kaniko-calculator-feature:0.1' }
        if ( env.BRANCH_NAME == 'playground' ) { echo "Create no container." }

        if ( "${CONTAINER_NAME}" ) {
          container('gradle') {
            sh '''
              cd Chapter08/sample1
              sed -i 's/minimum = 0.2/minimum = 0.1/' build.gradle
              sed -i '/checkstyle {/,/}/d' build.gradle 
              sed -i '/checkstyle/d' build.gradle 
              cat build.gradle
              chmod +x gradlew
              ./gradlew build
              mv ./build/libs/calculator-0.0.1-SNAPSHOT.jar /mnt
            '''
          }
          container('kaniko') {
            sh '''
              echo 'FROM openjdk:8-jre' > Dockerfile
              echo 'COPY ./calculator-0.0.1-SNAPSHOT.jar app.jar' >> Dockerfile
              echo 'ENTRYPOINT ["java", "-jar", "app.jar"]' >> Dockerfile
              mv /mnt/calculator-0.0.1-SNAPSHOT.jar .
              /kaniko/executor --context `pwd` --destination ${CONTAINER_REPO}/${CONTAINER_NAME}
            '''
          }
        }
      }
      echo 'tests pass'
    }
    failure  { echo 'tests failed' }
  }
}
